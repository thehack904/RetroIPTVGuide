name: 🚀 Build and Publish RetroIPTVGuide to GHCR and Docker Hub

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🔡 Normalize image name to lowercase
        id: prep
        run: |
          IMAGE_NAME_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME_LOWER=${IMAGE_NAME_LOWER}" >> $GITHUB_ENV

      - name: 🏗️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # -------------------- GHCR --------------------
      - name: 🔑 Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: 🧱 Build and Push multi-arch image to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:${{ github.ref_name }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.description=RetroIPTVGuide Flask + SQLite Web App
            org.opencontainers.image.licenses=CC-BY-NC-SA-4.0

      - name: 🧹 Cleanup local images
        run: docker image prune -af || true

      # -------------------- Docker Hub --------------------
      - name: 🐳 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🧱 Build and Push single-arch image to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          provenance: false
          tags: |
            thehack904/retroiptvguide:latest
            thehack904/retroiptvguide:${{ github.ref_name }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.description=RetroIPTVGuide Flask + SQLite Web App
            org.opencontainers.image.licenses=CC-BY-NC-SA-4.0

      # -------------------- Post-Build Summary --------------------
      - name: 🧾 Post-build summary
        run: |
          echo ""
          echo "✅ GHCR and Docker Hub builds complete."
          echo "🧩 Published image tags:"
          echo "   ghcr.io/thehack904/retroiptvguide:latest"
          echo "   ghcr.io/thehack904/retroiptvguide:${{ github.ref_name }}"
          echo "   thehack904/retroiptvguide:latest"
          echo "   thehack904/retroiptvguide:${{ github.ref_name }}"
          echo ""
          echo "🔗 Docker Hub: https://hub.docker.com/r/thehack904/retroiptvguide/tags"
          echo "🔗 GHCR:       https://github.com/thehack904?tab=packages&repo_name=RetroIPTVGuide"
          echo ""

  # -------------------- GHCR Cleanup --------------------
  cleanup-ghcr:
    name: 🧽 Cleanup old GHCR images
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      packages: write
    steps:
      - name: 🧹 Delete old GHCR package versions (keep last 5)
        uses: actions/delete-package-versions@v5
        with:
          owner: thehack904
          package-name: retroiptvguide
          package-type: container
          min-versions-to-keep: 5
          token: ${{ secrets.GHCR_PAT }}
        continue-on-error: true

      - name: 🧾 Summary
        run: echo "✅ GHCR cleanup complete — kept last 5 image versions (including latest)."
